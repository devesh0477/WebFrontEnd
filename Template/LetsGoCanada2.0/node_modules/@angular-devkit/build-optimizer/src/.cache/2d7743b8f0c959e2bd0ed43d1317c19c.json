{"remainingRequest":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/ngx-bootstrap/rating/fesm5/ngx-bootstrap-rating.js","dependencies":[{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/ngx-bootstrap/rating/fesm5/ngx-bootstrap-rating.js","mtime":499162500000},{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _angular_core,_angular_forms,_angular_common PURE_IMPORTS_END */\nimport { forwardRef, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, HostListener, EventEmitter, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar RATING_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: /*@__PURE__*/ forwardRef(( /**\n     * @return {?}\n     */function () { return RatingComponent; })),\n    multi: true\n};\nvar RatingComponent = /** @class */ /*@__PURE__*/ (function () {\n    function RatingComponent(changeDetection) {\n        this.changeDetection = changeDetection;\n        /**\n         * number of icons\n         */\n        this.max = 5;\n        /**\n         * fired when icon selected, $event:number equals to selected rating\n         */\n        this.onHover = new EventEmitter();\n        /**\n         * fired when icon selected, $event:number equals to previous rating value\n         */\n        this.onLeave = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onChange = Function.prototype;\n        // tslint:disable-next-line:no-any\n        this.onTouched = Function.prototype;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    RatingComponent.prototype.onKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            /* tslint:disable-next-line: deprecation */\n            if ([37, 38, 39, 40].indexOf(event.which) === -1) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            /* tslint:disable-next-line: deprecation */\n            /** @type {?} */\n            var sign = event.which === 38 || event.which === 39 ? 1 : -1;\n            this.rate(this.value + sign);\n        };\n    /**\n     * @return {?}\n     */\n    RatingComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.max = typeof this.max !== 'undefined' ? this.max : 5;\n            this.titles =\n                typeof this.titles !== 'undefined' && this.titles.length > 0\n                    ? this.titles\n                    : [];\n            this.range = this.buildTemplateObjects(this.max);\n        };\n    // model -> view\n    // model -> view\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatingComponent.prototype.writeValue =\n        // model -> view\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value % 1 !== value) {\n                this.value = Math.round(value);\n                this.preValue = value;\n                this.changeDetection.markForCheck();\n                return;\n            }\n            this.preValue = value;\n            this.value = value;\n            this.changeDetection.markForCheck();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatingComponent.prototype.enter = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (!this.readonly) {\n                this.value = value;\n                this.changeDetection.markForCheck();\n                this.onHover.emit(value);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    RatingComponent.prototype.reset = /**\n     * @return {?}\n     */\n        function () {\n            this.value = this.preValue;\n            this.changeDetection.markForCheck();\n            this.onLeave.emit(this.value);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RatingComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RatingComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatingComponent.prototype.rate = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (!this.readonly && value >= 0 && value <= this.range.length) {\n                this.writeValue(value);\n                this.onChange(value);\n            }\n        };\n    /**\n     * @protected\n     * @param {?} max\n     * @return {?}\n     */\n    RatingComponent.prototype.buildTemplateObjects = /**\n     * @protected\n     * @param {?} max\n     * @return {?}\n     */\n        function (max) {\n            /** @type {?} */\n            var result = [];\n            for (var i = 0; i < max; i++) {\n                result.push({\n                    index: i,\n                    title: this.titles[i] || i + 1\n                });\n            }\n            return result;\n        };\n    return RatingComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar RatingModule = /** @class */ /*@__PURE__*/ (function () {\n    function RatingModule() {\n    }\n    /**\n     * @return {?}\n     */\n    RatingModule.forRoot = /**\n     * @return {?}\n     */\n        function () {\n            return {\n                ngModule: RatingModule,\n                providers: []\n            };\n        };\n    return RatingModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nexport { RatingComponent, RatingModule, RATING_CONTROL_VALUE_ACCESSOR as Éµa };\n//# sourceMappingURL=ngx-bootstrap-rating.js.map\n",null]}