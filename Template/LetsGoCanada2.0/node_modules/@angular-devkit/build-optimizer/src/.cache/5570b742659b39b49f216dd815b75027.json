{"remainingRequest":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/jw-angular-pagination/lib/jw-pagination.component.js","dependencies":[{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/jw-angular-pagination/lib/jw-pagination.component.js","mtime":499162500000},{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/deveshverma/Desktop/LetsGoCanada2/WebFrontEnd/Template/LetsGoCanada2.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar paginate = require(\"jw-paginate\");\nvar JwPaginationComponent = /** @class */ /*@__PURE__*/ (function () {\n    function JwPaginationComponent() {\n        this.changePage = new core_1.EventEmitter(true);\n        this.initialPage = 1;\n        this.pageSize = 10;\n        this.maxPages = 10;\n        this.pager = {};\n    }\n    JwPaginationComponent.prototype.ngOnInit = function () {\n        // set page if items array isn't empty\n        if (this.items && this.items.length) {\n            this.setPage(this.initialPage);\n        }\n    };\n    JwPaginationComponent.prototype.ngOnChanges = function (changes) {\n        // reset page if items array has changed\n        if (changes.items.currentValue !== changes.items.previousValue) {\n            this.setPage(this.initialPage);\n        }\n    };\n    JwPaginationComponent.prototype.setPage = function (page) {\n        // get new pager object for specified page\n        this.pager = paginate(this.items.length, page, this.pageSize, this.maxPages);\n        // get new page of items from items array\n        var pageOfItems = this.items.slice(this.pager.startIndex, this.pager.endIndex + 1);\n        // call change page function in parent component\n        this.changePage.emit(pageOfItems);\n    };\n    JwPaginationComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    moduleId: module.id,\n                    selector: 'jw-pagination',\n                    template: \"<ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n  <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\" class=\\\"page-item first-item\\\">\\n      <a (click)=\\\"setPage(1)\\\" class=\\\"page-link\\\">First</a>\\n  </li>\\n  <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\" class=\\\"page-item previous-item\\\">\\n      <a (click)=\\\"setPage(pager.currentPage - 1)\\\" class=\\\"page-link\\\">Previous</a>\\n  </li>\\n  <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\" class=\\\"page-item number-item\\\">\\n      <a (click)=\\\"setPage(page)\\\" class=\\\"page-link\\\">{{page}}</a>\\n  </li>\\n  <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\" class=\\\"page-item next-item\\\">\\n      <a (click)=\\\"setPage(pager.currentPage + 1)\\\" class=\\\"page-link\\\">Next</a>\\n  </li>\\n  <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\" class=\\\"page-item last-item\\\">\\n      <a (click)=\\\"setPage(pager.totalPages)\\\" class=\\\"page-link\\\">Last</a>\\n  </li>\\n</ul>\"\n                },] },\n    ];\n    /** @nocollapse */\n    JwPaginationComponent.propDecorators = {\n        \"items\": [{ type: core_1.Input },],\n        \"changePage\": [{ type: core_1.Output },],\n        \"initialPage\": [{ type: core_1.Input },],\n        \"pageSize\": [{ type: core_1.Input },],\n        \"maxPages\": [{ type: core_1.Input },],\n    };\n    return JwPaginationComponent;\n}());\nexports.JwPaginationComponent = JwPaginationComponent;\n",null]}